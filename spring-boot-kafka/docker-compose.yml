version: '3.1'
services:
  app:
    image: spring-boot-kafka
    container_name: spring-boot-kafka
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "29092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_MIN_INSYNC_REPLICAS=1

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      sleep 10
      
      # blocks until kafka is reachable
      #kafka-topics --bootstrap-server kafka:29092 --list
      kafka-topics --zookeeper zookeeper:2181 --list
      
      echo -e 'Creating kafka topics'
      #kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic my-topic-1 --replication-factor 1 --partitions 1
      #kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic my-topic-2 --replication-factor 1 --partitions 1
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic my-topic-1
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic my-topic-2
      
      echo -e 'Successfully created the following topics:'
      #kafka-topics --bootstrap-server kafka:29092 --list
      kafka-topics --zookeeper zookeeper:2181 --list
      "

